<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Str;

class School extends Model
{
    protected $fillable = [
        'slug',
        'name',
        'npsn',
        'street',
        'village',
        'status',
        'district_id',
        'form_of_education_id',
    ];

    protected function casts(): array
    {
        return [
            'slug' => 'string',
        ];
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (School $school) {
            $school->slug = Str::uuid()->toString();
        });
    }

    public function district(): BelongsTo
    {
        return $this->belongsTo(District::class);
    }

    public function formOfEducation(): BelongsTo
    {
        return $this->belongsTo(FormOfEducation::class);
    }

    // TODO Scope
    public function scopeFilterByNpsn(Builder $query, $npsn): Builder
    {
        return $query->where('npsn', $npsn);
    }

    public function scopeFilterData(Builder $query, $request): Builder
    {
        $search = $request['search'] ?? null;
        $formOfEducation = $request['form-of-edu'] ?? null;
        $districtCode = $request['district_code'] ?? null;
        $npsn = $request['npsn'] ?? null;
        $village = $request['village'] ?? null;

        return $query->when($search, function ($query) use ($search) {
            $query->whereLike('name', '%' . $search . '%');
        })
            ->when($npsn, fn ($query) => $query->where('npsn', $npsn))
            ->when($formOfEducation && ($formOfEducation != 'all'), function ($query) use ($formOfEducation) {
                $query->whereHas('formOfEducation', function ($query) use ($formOfEducation) {
                    $query->where('slug', $formOfEducation);
                });
            })
            ->when($districtCode, fn($query) => $query->whereHas('district', fn($query) => $query->where('code', $districtCode)))
            ->when($village, fn($query) => $query->where('village', $village));
    }
}
