<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Support\Str;

class Province extends Model
{
    protected $fillable = [
        'slug',
        'name',
        'code',
        'url'
    ];

    protected function casts(): array
    {
        return [
            'slug' => 'string',
        ];
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (Province $province) {
            $province->slug = Str::uuid()->toString();
        });
    }

    public function cities(): HasMany
    {
        return $this->hasMany(City::class, 'province_id');
    }

    // TODO Scope
    public function scopeFilterByCode(Builder $query, $code): Builder
    {
        return $query->where('code', $code);
    }

    public function scopeFilterData(Builder $query, $request): Builder
    {
        $search = $request['search'] ?? null;

        return $query->when($search, fn($query) => $query->whereLike('name', "%$search%"));
    }
}
