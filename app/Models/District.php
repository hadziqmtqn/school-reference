<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Support\Str;

class District extends Model
{
    protected $fillable = [
        'slug',
        'name',
        'code',
        'city_id',
        'url'
    ];

    protected function casts(): array
    {
        return [
            'slug' => 'string',
        ];
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (District $district) {
            $district->slug = Str::uuid()->toString();
        });
    }

    public function city(): BelongsTo
    {
        return $this->belongsTo(City::class);
    }

    public function schools(): HasMany
    {
        return $this->hasMany(School::class, 'district_id');
    }


    protected function totalSchool(): Attribute
    {
        return Attribute::make(
            get: fn() => $this->schools->count(),
        );
    }

    // TODO Scope
    public function scopeFilterByCode(Builder $query, $code): Builder
    {
        return $query->where('code', $code);
    }

    public function scopeFilterData(Builder $query, $request): Builder
    {
        $search = $request['search'] ?? null;
        $code = $request['code'] ?? null;

        $query->when($search, fn($query) => $query->whereLike('name', '%' . $search . '%'));
        $query->when($code, fn($query) => $query->where('code', $code));
        $query->whereHas('city', fn($query) => $query->where('code', $request['city_code']));

        return $query;
    }
}
